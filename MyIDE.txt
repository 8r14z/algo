import math
def countingSort(nums: [int], d: int, base: int):
    n = base
    pos = [0] * n
    
    for num in nums: 
        countIndex = (num // (base ** (d-1))) % base
        pos[countIndex] += 1
    
    numOfNums = len(nums)
    for i in range(n-1, -1, -1):
        numAtPos = numOfNums - pos[i]
        pos[i] = numAtPos
        numOfNums = numAtPos

    output = [0] * len(nums)
    for num in nums:
        countIndex = (num // (base ** (d-1))) % base
        output[pos[countIndex]] = num
        pos[countIndex] += 1
    
    return output

def radixSort(nums: [int]) -> [int]:
    max = float('-inf')
    base = 10
    for num in nums:
        if num > max:
            max = num
    
    digits = int(math.log10(max)) + 1

    for d in range(1, digits+1):
        nums = countingSort(nums, d, base)
        print(nums)

    return nums


radixSort([329, 457, 657, 839, 436, 720, 355])